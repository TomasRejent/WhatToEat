----- QUESTIONS --------------------------------------------------------------------------------------------------------


----- ARCHITECTURE -----------------------------------------------------------------------------------------------------
- Set nullable false to mandatory entity attributes OR use hibernate validations
- Use config property loading from Spring instead of ConfigService
- Use property from config to set language of application
- Decide if cells with complex graphics should be defined in code or in fxml
- Create custom component for MultiSelect, so MultiSelect does not need to hack underlying CheckComboBox
- Decide if IngredientQuantityTable should be in core components or in ingredient package and thus ComponentUtil has to provide public access
- Measure and optimize loading of tables
- Clean up messages.properties so there are no duplicate words. Use common keys instead.
- Optimize filtering so items from database are already sorted. Optimize converting of entities to sorted set.
- Duration field should extend RegexRestrictedField
- Create mechanism to properly fill entities from update object without calling get on optional without presence check (is related to validation mechanism)
- Decide if servings in diets should support float values or integers only
- Remove deleteById from repositories in x86 branch. Since spring boot update to 2.0 it is no longer necessary.

- low priority - try to use metamodel in criteria queries

----- FEATURES ---------------------------------------------------------------------------------------------------------
- Diet feature
  X - create entities for diet
    - create model for diet
    - create services for diet
    - create screen with diets
    - create screen for creating/generating diets
    - create diet detail screen
    - add edit with suggestion to diet detail screen
    - add feature to generate shopping list
    - restore previous selection of cell after edit of of meals in day diet (now first cell in edited row is selected after dialog submit)

- New suggestion component
    - supports adding of new items, so enter key use suggestion only when selected by arrow keys
    - supports suggestion provider which could use database
    - supports static set of possible suggestions
    - Add suggestion to keyword field
    - Add suggestion to recipe name filter
    - Add suggestions to ingredient name filter

- Cookbooks / Recipes / Ingredients Import export
    - add UUID to these entities
    - create export to json
    - create import from json
    - create merge tool

- Create phases
    - phase have name, duration, utilization and "lock to newxt phase" flag
    - phases prefill preparation field if it is empty
    - create config property which allows switching from simple duration of recipes to phases

- Add "Ingredient" type of recipe and allows its usage as ingredient for other recipes, this allows composition of recipes

- Add button add next to recipe add dialog which preserves selected cookbook (and maybe keywords)

- Ingredient quantity formatting use unit conversion. (IngredientQuantityServiceImpl)
- Ingredient quantities are smart formatted (bigger amounts do not use decimal points, small does - for example spices)

- Update suggestion sorting of so it first recommend strings that starts with text

- add persisting of last used filter for recipes
- Optimize focus transferring and key events for recipe filter

- Ingredient add dialog - update keyword suggestions with newly added keywords when adding next ingredient

- update hiding of side dishes link so they does not take up space in layout when no side dishes are present

- add weight coefficient to config file so weight for one serving can be adjusted globally

- upgrade time measuring to suport phases. Phases are ordered and have time in minutes and utilization in percents.

- Add validation errors to UI

- Add language to config file and use it in program
- Translate new cz messages to en
- Translate new cz messages to sk

----- BUGS -------------------------------------------------------------------------------------------------------------
- Combo Box bound to list - navigating by arrows in combo box select values immediately
- If two recipes have same name only one of them is displayed in table

Done bugs:
X - Fix creating of Remove button in RemovableStringCell so it is obtained from application context.
X - Ingredient keywords overlaps in recipe detail dialog.
X - Fix random generator to work even if no recipes are available for some type.
X - Enable text wrap for text areas in dialogs and in cookbook and author detail
X - Check why ingredient creates unit conversion entity even when not filled
X - Check if all file operations closes their streams.
X - Database script is not updated immediately after program close.
X - AddRecipe dialog - clearing of duration fields does not work
X - Author and Cookbook descriptions are not saved as CLOB

Done features:
X - add side dishes with clickable links which open new view to recipe attribute dialog section
X - Add name filter to ingredients
X - add filter submit event on enter key pressed in name field
X - add event to open recipe view on double click on table
X - Add possibility to open recipe by double click in recipe view table.
X - Display error dialog when recipe cannot be displayed because of invalid recipeIngredient info
X - Show diet view on double click
X - Ingredients with PIECE type should support fraction values and round them up in view.
X - Add service for computing recipe price.
X - Add UI for food list generator.
X - Create view for generated food lists
X - Add config file for setting application settings.
X - Add file coding settings.
X - Recipe view dialog
    X- styling so preparation has more space and whole dialog space is used even when some categories are closed
X - Ingredient view
X Startup optimization
    X - add splashscreen
    X - optimize spring boot startup
X - Add dialg for creating new recipes and ingredients.
    X - Basic dialog.
    X - Styling dialog
    X - Add way to remove added keywords
    X - Add way to remove ingredients and side dishes
    X - Add way to edit added recipeIngredient quantity
    X - Add internationalization for combo box values.
    X - Add way to remove ingredients
    X - Add validations
    X - Add possible side dishes
    X - Suggestions should stay open even for exact match
X - Basic recipe filter
X - wrap actions in try catch and show error dialog on error, so user has feedback that some shit happened

Done Arch:
X - Create FieldLabel component which adds ':' automatically after internationalized text, so there can be only one variant in message properties.
X - Create application wide css file used by all FXML loaders, so some styles can be easily changed for whole app (like buttons size)
X - Create method for creating fxml loader with resource bundle in Main and use it in all places which creates FXML loader
X - Devise proper mechanism for FXML custom components
X - add brief toString to entities so logging of convert operation makes sense
X - Setup logger so it keeps logs for restricted time and size
X - Add support to change log level at runtime.
X - Add UUID to every entity and migrate existing data
X - Use recipe UUIDs in diets
X - Create ER diagram and validate each attribute
X - Add transactional annotations to write service methods
X - Decide if custom components should be created for add/edit/view/remove/delete buttons
X - ConverterUtil can have method for converting not sorted sets. This can be used for converting before saving entities. (low priority)
X - Create number field
X - check all services if they properly use Transactional annotation
X - update objects should not extend model interfaces
X - Create some hack to internationalize buttons in javafx dialogs
X - Decide how to pass params between page controllers - for example when diet controller wants to show diet, it must switch to diet view page and pass it Diet to show.
  X - This can be probably done by Spring events/listener (easiest to implement) - When event is handled components are null, so this cannot be used without some synchronization.
  X - Other solution is to update Main.loadPage to return composite object, which contains loaded component and its controller, controller can be obtained from FXML loader.
      This is more work and it would require type casting of controller. - Is done and works.