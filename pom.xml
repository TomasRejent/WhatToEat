<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cz.afrosoft</groupId>
    <artifactId>WhatToEat</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>WhatToEat</name>

    <properties>
        <!-- Properties shared for all profiles -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>cz.afrosoft.whattoeat.Main</mainClass>
        <hsqldb.version>2.4.0</hsqldb.version>
        <commonslang.version>3.7</commonslang.version>
        <logback.version>1.2.3</logback.version>
        <xmlbind.version>2.3.0</xmlbind.version>
        <!-- jdk9 profile specific properties -->
        <jdk9.spring.boot.version>2.0.0.RELEASE</jdk9.spring.boot.version>
        <jdk9.controlsfx.version>9.0.0</jdk9.controlsfx.version>
        <!-- jdk8 profile specific properties -->
        <jdk8.spring.boot.version>2.0.0.RELEASE</jdk8.spring.boot.version>
        <jdk8.controlsfx.version>8.40.14</jdk8.controlsfx.version>
    </properties>

    <organization>
        <name>Afrosoft</name>
    </organization>

    <profiles>
        <profile>
            <id>jdk9</id>

            <activation>
                <jdk>9</jdk>
            </activation>

            <dependencies>
                <!-- Spring and data persistence -->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter</artifactId>
                    <version>${jdk9.spring.boot.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-jpa</artifactId>
                    <version>${jdk9.spring.boot.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.apache.tomcat</groupId>
                            <artifactId>tomcat-jdbc</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>${hsqldb.version}</version>
                </dependency>
                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>${xmlbind.version}</version>
                </dependency>
                <!-- Additional GUI components -->
                <dependency>
                    <groupId>org.controlsfx</groupId>
                    <artifactId>controlsfx</artifactId>
                    <version>${jdk9.controlsfx.version}</version>
                </dependency>

                <!-- Common utilities -->
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                    <version>${commonslang.version}</version>
                </dependency>

                <!-- Logging -->
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                    <version>${logback.version}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <!-- Plugin for source compilation.  -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.7.0</version>
                        <configuration>
                            <source>9</source>
                            <target>9</target>
                        </configuration>
                    </plugin>
                    <!-- Plugin for packing dependencies into app jar. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.0.2</version>
                        <executions>
                            <execution>
                                <id>unpack-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <excludeScope>system</excludeScope>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Plugin for jar packaging. Adds information about version to produced jar. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.0.2</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>

                    <!-- Needed for packing spring boot jar file which is executable without IDE. -->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${jdk9.spring.boot.version}</version>
                        <configuration>
                            <mainClass>${mainClass}</mainClass>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <!-- This is specification of repositories for Spring boot milestones, which are needed to java 9 and are not released on official repo yet. -->
            <pluginRepositories>
                <pluginRepository>
                    <id>spring-milestones</id>
                    <name>Spring Milestones</name>
                    <url>https://repo.spring.io/milestone</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
            <repositories>
                <repository>
                    <id>spring-milestones</id>
                    <name>Spring Milestones</name>
                    <url>https://repo.spring.io/milestone</url>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
        </profile>

        <profile>
            <id>jdk8</id>

            <activation>
                <jdk>1.8</jdk>
            </activation>

            <dependencies>
                <!-- Spring and data persistence -->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter</artifactId>
                    <version>${jdk8.spring.boot.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-jpa</artifactId>
                    <version>${jdk8.spring.boot.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.javassist</groupId>
                            <artifactId>javassist</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <!-- Javasist must be excluded from spring-boot-starter-data-jpa and used in newer version.
                Else org.hibernate.jpa.boot.archive.spi.ArchiveException: Could not build ClassFile is thrown.
                This is reported on java 8 build on ubuntu.-->
                <dependency>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                    <version>3.22.0-GA</version>
                </dependency>

                <dependency>
                    <groupId>org.hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>${hsqldb.version}</version>
                </dependency>
                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>${xmlbind.version}</version>
                </dependency>

                <!-- Additional GUI components -->
                <dependency>
                    <groupId>org.controlsfx</groupId>
                    <artifactId>controlsfx</artifactId>
                    <version>${jdk8.controlsfx.version}</version>
                </dependency>

                <!-- Common utilities -->
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                    <version>${commonslang.version}</version>
                </dependency>

                <!-- Logging -->
                <dependency>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                    <version>${logback.version}</version>
                </dependency>

            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>unpack-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <excludeScope>system</excludeScope>
                                    <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>unpack-dependencies</id>

                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/../bin/javapackager</executable>
                                    <arguments>
                                        <argument>-createjar</argument>
                                        <argument>-nocss2bin</argument>
                                        <argument>-appclass</argument>
                                        <argument>${mainClass}</argument>
                                        <argument>-srcdir</argument>
                                        <argument>${project.build.directory}/classes</argument>
                                        <argument>-outdir</argument>
                                        <argument>${project.build.directory}</argument>
                                        <argument>-outfile</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-cli</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/java</executable>
                                    <commandlineArgs>${runfx.args}</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                            <compilerArguments>
                                <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar
                                </bootclasspath>
                            </compilerArguments>
                            <compilerArgs>
                                <arg>-parameters</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <!-- Needed for packing jar file which is executable without IDE. -->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${jdk8.spring.boot.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
